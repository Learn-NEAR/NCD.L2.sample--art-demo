{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Oleksandr Sai\\\\source\\\\repos\\\\OlexandrSai\\\\near--art--demo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst account_1 = require(\"./account\");\n\nconst connection_1 = require(\"./connection\");\n\nconst contract_1 = require(\"./contract\");\n\nconst account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\n\n\nclass Near {\n  constructor(config) {\n    this.config = config;\n    this.connection = connection_1.Connection.fromConfig({\n      networkId: config.networkId,\n      provider: {\n        type: 'JsonRpcProvider',\n        args: {\n          url: config.nodeUrl,\n          headers: config.headers\n        }\n      },\n      signer: config.signer || {\n        type: 'InMemorySigner',\n        keyStore: config.keyStore || config.deps.keyStore\n      }\n    });\n\n    if (config.masterAccount) {\n      // TODO: figure out better way of specifiying initial balance.\n      // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n      const initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n      this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n    } else if (config.helperUrl) {\n      this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n    } else {\n      this.accountCreator = null;\n    }\n  }\n  /**\n   * @param accountId near accountId used to interact with the network.\n   */\n\n\n  account(accountId) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const account = new account_1.Account(_this.connection, accountId);\n      return account;\n    })();\n  }\n  /**\n   * Create an account using the {@link AccountCreator}. Either:\n   * * using a masterAccount with {@link LocalAccountCreator}\n   * * using the helperUrl with {@link UrlAccountCreator}\n   * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n   *\n   * @param accountId\n   * @param publicKey\n   */\n\n\n  createAccount(accountId, publicKey) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this2.accountCreator) {\n        throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n      }\n\n      yield _this2.accountCreator.createAccount(accountId, publicKey);\n      return new account_1.Account(_this2.connection, accountId);\n    })();\n  }\n  /**\n   * @deprecated Use {@link Contract} instead.\n   * @param contractId\n   * @param options\n   */\n\n\n  loadContract(contractId, options) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const account = new account_1.Account(_this3.connection, options.sender);\n      return new contract_1.Contract(account, contractId, options);\n    })();\n  }\n  /**\n   * @deprecated Use {@link Account.sendMoney} instead.\n   * @param amount\n   * @param originator\n   * @param receiver\n   */\n\n\n  sendTokens(amount, originator, receiver) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n      const account = new account_1.Account(_this4.connection, originator);\n      const result = yield account.sendMoney(receiver, amount);\n      return result.transaction_outcome.id;\n    })();\n  }\n\n}\n\nexports.Near = Near;","map":{"version":3,"sources":["C:/Users/Oleksandr Sai/source/repos/OlexandrSai/near--art--demo/node_modules/near-api-js/lib/near.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Near","bn_js_1","require","account_1","connection_1","contract_1","account_creator_1","constructor","config","connection","Connection","fromConfig","networkId","provider","type","args","url","nodeUrl","headers","signer","keyStore","deps","masterAccount","initialBalance","default","accountCreator","LocalAccountCreator","Account","helperUrl","UrlAccountCreator","account","accountId","createAccount","publicKey","Error","loadContract","contractId","options","sender","Contract","sendTokens","amount","originator","receiver","console","warn","result","sendMoney","transaction_outcome","id"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst account_1 = require(\"./account\");\nconst connection_1 = require(\"./connection\");\nconst contract_1 = require(\"./contract\");\nconst account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = connection_1.Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl, headers: config.headers } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n            this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     * @param accountId near accountId used to interact with the network.\n     */\n    async account(accountId) {\n        const account = new account_1.Account(this.connection, accountId);\n        return account;\n    }\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    async createAccount(accountId, publicKey) {\n        if (!this.accountCreator) {\n            throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n        }\n        await this.accountCreator.createAccount(accountId, publicKey);\n        return new account_1.Account(this.connection, accountId);\n    }\n    /**\n     * @deprecated Use {@link Contract} instead.\n     * @param contractId\n     * @param options\n     */\n    async loadContract(contractId, options) {\n        const account = new account_1.Account(this.connection, options.sender);\n        return new contract_1.Contract(account, contractId, options);\n    }\n    /**\n     * @deprecated Use {@link Account.sendMoney} instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    async sendTokens(amount, originator, receiver) {\n        console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n        const account = new account_1.Account(this.connection, originator);\n        const result = await account.sendMoney(receiver, amount);\n        return result.transaction_outcome.id;\n    }\n}\nexports.Near = Near;\n"]},"metadata":{},"sourceType":"script"}