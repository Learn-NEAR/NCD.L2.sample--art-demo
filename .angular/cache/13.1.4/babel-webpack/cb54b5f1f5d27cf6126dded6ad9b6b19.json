{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Oleksandr Sai\\\\source\\\\repos\\\\OlexandrSai\\\\near--art--demo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { Contract, keyStores, Near, WalletConnection } from \"near-api-js\";\nimport { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nexport class NearService {\n  constructor() {\n    this.accountId = '';\n    this.CONTRACT_ID = environment.CONTRACT_ID; // connecting to NEAR\n\n    this.near = new Near({\n      networkId: environment.NETWORK_ID,\n      keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n      nodeUrl: environment.NODE_URL,\n      walletUrl: environment.WALLET_URL,\n      headers: {}\n    }); // create wallet connection\n\n    this.wallet = new WalletConnection(this.near, \"artdemo\"); // get contract\n\n    this.artContract = this.getArtContract();\n    this.accountId = this.wallet.getAccountId();\n  }\n\n  getArtContract() {\n    return new Contract(this.wallet.account(), this.CONTRACT_ID, {\n      viewMethods: ['getTempDesign', 'viewMyDesign'],\n      changeMethods: ['design', 'claimMyDesign', 'burnMyDesign']\n    });\n  }\n\n  getTempDesign(accountId) {\n    return this.artContract.getTempDesign({\n      accountId: accountId\n    });\n  }\n\n  getViewMyDesign(accountId) {\n    return this.artContract.viewMyDesign({\n      accountId: accountId\n    });\n  } // generate new design\n\n\n  generateDesign(accountId) {\n    return this.artContract.design({\n      accountId: accountId\n    }, environment.GAS);\n  }\n\n  // claim existing design\n  claimDesign(seed) {\n    return this.artContract.claimMyDesign({\n      seed: seed\n    }, environment.GAS);\n  }\n\n  // burn design\n  burnDesign() {\n    return this.artContract.burnMyDesign({}, environment.GAS);\n  }\n\n  handleSignIn() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.wallet.requestSignIn({\n        contractId: environment.CONTRACT_ID,\n        methodNames: []\n      });\n    })();\n  }\n\n  handleSignOut() {\n    this.wallet.signOut();\n    this.accountId = '';\n  }\n\n}\n\nNearService.ɵfac = function NearService_Factory(t) {\n  return new (t || NearService)();\n};\n\nNearService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NearService,\n  factory: NearService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Oleksandr Sai/source/repos/OlexandrSai/near--art--demo/src/app/services/near.service.ts"],"names":["Contract","keyStores","Near","WalletConnection","environment","i0","NearService","constructor","accountId","CONTRACT_ID","near","networkId","NETWORK_ID","keyStore","BrowserLocalStorageKeyStore","nodeUrl","NODE_URL","walletUrl","WALLET_URL","headers","wallet","artContract","getArtContract","getAccountId","account","viewMethods","changeMethods","getTempDesign","getViewMyDesign","viewMyDesign","generateDesign","design","GAS","claimDesign","seed","claimMyDesign","burnDesign","burnMyDesign","handleSignIn","requestSignIn","contractId","methodNames","handleSignOut","signOut","ɵfac","NearService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { Contract, keyStores, Near, WalletConnection } from \"near-api-js\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport * as i0 from \"@angular/core\";\r\nexport class NearService {\r\n    constructor() {\r\n        this.accountId = '';\r\n        this.CONTRACT_ID = environment.CONTRACT_ID;\r\n        // connecting to NEAR\r\n        this.near = new Near({\r\n            networkId: environment.NETWORK_ID,\r\n            keyStore: new keyStores.BrowserLocalStorageKeyStore(),\r\n            nodeUrl: environment.NODE_URL,\r\n            walletUrl: environment.WALLET_URL,\r\n            headers: {}\r\n        });\r\n        // create wallet connection\r\n        this.wallet = new WalletConnection(this.near, \"artdemo\");\r\n        // get contract\r\n        this.artContract = this.getArtContract();\r\n        this.accountId = this.wallet.getAccountId();\r\n    }\r\n    getArtContract() {\r\n        return new Contract(this.wallet.account(), this.CONTRACT_ID, {\r\n            viewMethods: ['getTempDesign', 'viewMyDesign'],\r\n            changeMethods: ['design', 'claimMyDesign', 'burnMyDesign']\r\n        });\r\n    }\r\n    getTempDesign(accountId) {\r\n        return this.artContract.getTempDesign({ accountId: accountId });\r\n    }\r\n    getViewMyDesign(accountId) {\r\n        return this.artContract.viewMyDesign({ accountId: accountId });\r\n    }\r\n    // generate new design\r\n    generateDesign(accountId) {\r\n        return this.artContract.design({ accountId: accountId }, environment.GAS);\r\n    }\r\n    ;\r\n    // claim existing design\r\n    claimDesign(seed) {\r\n        return this.artContract.claimMyDesign({ seed: seed }, environment.GAS);\r\n    }\r\n    ;\r\n    // burn design\r\n    burnDesign() {\r\n        return this.artContract.burnMyDesign({}, environment.GAS);\r\n    }\r\n    ;\r\n    async handleSignIn() {\r\n        await this.wallet.requestSignIn({\r\n            contractId: environment.CONTRACT_ID,\r\n            methodNames: []\r\n        });\r\n    }\r\n    ;\r\n    handleSignOut() {\r\n        this.wallet.signOut();\r\n        this.accountId = '';\r\n    }\r\n    ;\r\n}\r\nNearService.ɵfac = function NearService_Factory(t) { return new (t || NearService)(); };\r\nNearService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: NearService, factory: NearService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}